// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	interfaces "github.com/golangid/candi/codebase/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// PlatformType is an autogenerated mock type for the PlatformType type
type PlatformType struct {
	mock.Mock
}

// StartRootSpan provides a mock function with given fields: ctx, operationName, header
func (_m *PlatformType) StartRootSpan(ctx context.Context, operationName string, header map[string]string) interfaces.Tracer {
	ret := _m.Called(ctx, operationName, header)

	var r0 interfaces.Tracer
	if rf, ok := ret.Get(0).(func(context.Context, string, map[string]string) interfaces.Tracer); ok {
		r0 = rf(ctx, operationName, header)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.Tracer)
		}
	}

	return r0
}

// StartSpan provides a mock function with given fields: ctx, opName
func (_m *PlatformType) StartSpan(ctx context.Context, opName string) interfaces.Tracer {
	ret := _m.Called(ctx, opName)

	var r0 interfaces.Tracer
	if rf, ok := ret.Get(0).(func(context.Context, string) interfaces.Tracer); ok {
		r0 = rf(ctx, opName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.Tracer)
		}
	}

	return r0
}
